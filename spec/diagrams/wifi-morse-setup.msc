msc {
    # entities
    User, App, IRKit, Server;

    # space
    |||;

    IRKit note IRKit [label = "Powered Off"];

    User -> IRKit    [label = "Power On"];
    IRKit note IRKit [label = "No Wifi Credentials, Waiting for Morse Sound"];

    User -> App      [label = "Launch App"];
    App => Server    [label = "GET /keys"];
    App << Server    [label = "Keys Response (status code: 200\nbody: \"#{key1},#{key2}\")"];

    App => Server    [label = "POST /door (body: key=#{key1}) (Long Poll)"];
    App << Server    [label = "Door Response (status code: 401)\nKeys have expired, get keys again"];

    App => Server    [label = "GET /keys"];
    App << Server    [label = "Keys Response (snip)"];

    App => Server    [label = "POST /door (body: key=#{key1}) (Long Poll)"];
    App << Server    [label = "Door Response (status code: 408)\nRequest Time-out, try again"];

    App => Server    [label = "POST /door (body: key=#{key1}) (Long Poll)"];

    User -> App      [label = "Input Wifi SSID and Password"];
    App -> IRKit     [label = "Morse Sound\n(Wifi Security Level, SSID, Password, Key2, CRC8)"];

    IRKit note IRKit [label = "Decodes Morse Sound and Connect to Wifi"];
    IRKit => Server  [label = "POST /door (body: key=#{key2}) (Long Poll)"];
    IRKit << Server  [label = "Door Response (status code: 200)"];

    App << Server    [label = "Door Response (status code: 200)"];

    IRKit => Server  [label = "GET /messages?key=#{key2}&newer_than=#{newest_message_id} (Long Poll)"];

    App -> Server    [label = "POST /messages (body: key=#{key1}&event=#{event})"];
    App << Server    [label = "Message Response (status code: 200)"];

    IRKit << Server  [label = "Messages Response (status code: 200\nbody: \"#{message_id},#{event}\")"];
}
